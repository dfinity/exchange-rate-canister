name: Docker build

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  builder:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2

      # We use buildx and its GitHub Actions caching support `type=gha`. For
      # more information, see
      # https://github.com/docker/build-push-action/issues/539
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v1

      - name: Build base Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          cache-from: type=gha,scope=cached-stage
          cache-to: type=gha,scope=cached-stage,mode=max
          outputs: type=cacheonly
          target: builder
        env:
          IP_SUPPORT: ipv6

  assets:
    needs: builder
    runs-on: ubuntu-20.04
    strategy:
      matrix:
       include:
         - BUILD_NAME: "mainnet"
    steps:
      - uses: actions/checkout@v2
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v1
      # Build and upload
      - name: Build Exchange Rate Canister Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          cache-from: type=gha,scope=cached-stage
          # Exports the artifacts from the final stage
          outputs: ./${{ matrix.BUILD_NAME }}-out
        env:
          IP_SUPPORT: ipv6
      - name: 'Upload ${{ matrix.BUILD_NAME }} wasm module'
        uses: actions/upload-artifact@v2
        with:
          name: Exchange Rate Canister wasm module
          path: ${{ matrix.BUILD_NAME }}-out/xrc.wasm
      - name: "Link the build sha to this commit"
        run: |
         : Set up git
         git config user.name "GitHub Actions Bot"
         git config user.email "<>"
         : Make a note of the WASM shasum.
         NOTE="refs/notes/*"
         SHA="$(sha256sum < "${{ matrix.BUILD_NAME }}-out/xrc.wasm")"
         echo $SHA
         git fetch origin "+${NOTE}:${NOTE}"
         if git notes --ref="${{ matrix.BUILD_NAME }}/wasm-sha" add -m "$SHA"
         then git push origin "${NOTE}:${NOTE}" || true
         else echo SHA already set
         fi
      - name: "Verify that the WASM module is small enough to deploy"
        run: |
         wasm_size="$(wc -c < "${{ matrix.BUILD_NAME }}-out/xrc.wasm")"
         max_size=2097000
         echo "WASM size:          $wasm_size"
         echo "Max supported size: $max_size"
         (( wasm_size <= max_size )) || { echo "The WASM is too large" ; exit 1 ; }
