type AssetClass = variant { Cryptocurrency; FiatCurrency; };

type Asset = record {
    symbol: text;
    class: AssetClass;
};

// The parameters for the `get_exchange_rate` API call.
type GetExchangeRateRequest = record {
    base_asset: Asset;
    quote_asset: Asset;
    // An optional timestamp to get the rate for a specific time period.
    timestamp: opt nat64;
}; 

type ExchangeRateMetadata = record {
    number_of_received_rates: nat64;
    number_of_queried_sources: nat64;
    standard_deviation_permyriad: nat64;
    // min_rate_received
    // max_rate_received
};

type ExchangeRate = record {
    base_asset: Asset;
    quote_asset: Asset;
    timestamp: nat64;
    rate_permyriad: nat64;
    metadata: ExchangeRateMetadata;
};

type ExchangeRateError = record {
    code: nat32; 
    description: text;
};

type GetExchangeRateResult = variant {
    // Successfully retrieved the exchange rate from the cache or API calls.
    Ok: ExchangeRate;
    // Failed to retrieve the exchange rate due to invalid API calls, invalid timestamp, etc.
    Err: ExchangeRateError;
};

service : {
    "get_exchange_rate": (GetExchangeRateRequest) -> (GetExchangeRateResult);
}
